generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  email      String      @unique
  password   String
  name       String
  role       UserRole    @default(HEALTH_UNIT)
  healthUnit HealthUnit?
  company    Company?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model HealthUnit {
  id         String      @id @default(uuid())
  name       String
  street     String
  number     String
  district   String
  city       String
  state      String
  zipCode    String
  isVerified Boolean     @default(false)
  user       User        @relation(fields: [userId], references: [id])
  userId     String      @unique
  company    Company?    @relation(fields: [companyId], references: [id])
  companyId  String?
  equipment  Equipment[]
  reports    Report[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Company {
  id               String       @id @default(uuid())
  name             String
  cnpj             String       @unique
  registrationCode String       @unique @default(cuid())
  adminUser        User         @relation(fields: [adminUserId], references: [id])
  adminUserId      String       @unique
  healthUnits      HealthUnit[]
  equipment        Equipment[]
  reports          Report[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Equipment {
  id           String     @id @default(uuid())
  name         String
  model        String
  serialNumber String     @unique
  healthUnit   HealthUnit @relation(fields: [healthUnitId], references: [id])
  healthUnitId String
  company      Company    @relation(fields: [companyId], references: [id])
  companyId    String
  reports      Report[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Report {
  id           String       @id @default(uuid())
  title        String
  description  String
  status       ReportStatus @default(OPEN)
  healthUnit   HealthUnit   @relation(fields: [healthUnitId], references: [id])
  healthUnitId String
  equipment    Equipment    @relation(fields: [equipmentId], references: [id])
  equipmentId  String
  company      Company      @relation(fields: [companyId], references: [id])
  companyId    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  COMPANY_ADMIN
  HEALTH_UNIT
}

enum ReportStatus {
  OPEN
  IN_PROGRESS
  CLOSED
  CANCELLED
}
